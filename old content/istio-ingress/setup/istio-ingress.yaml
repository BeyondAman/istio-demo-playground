apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-ingress
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: istio-ingress
rules:
  - apiGroups: [""]
    resources: ["configmaps", "endpoints", "pods", "services"]
    verbs: ["*"]
  - apiGroups: ["extensions"]
    resources: ["thirdpartyresources", "thirdpartyresources.extensions", "ingresses"]
    verbs: ["*"]
  - apiGroups: ["istio.io"]
    resources: ["istioconfigs", "istioconfigs.istio.io"]
    verbs: ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: istio-ingress
subjects:
  - kind: ServiceAccount
    name: istio-ingress
roleRef:
  kind: ClusterRole
  name: istio-ingress
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: istio-ingress
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        alpha.istio.io/sidecar: ignore
      labels:
        istio: ingress
    spec:
      serviceAccountName: istio-ingress
      containers:
        - name: istio-ingress
          image: docker.io/istio/proxy_debug:0.1.6
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          args:
            - "proxy"
            - "ingress"
            - "-v=2"
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
---
apiVersion: v1
kind: Service
metadata:
  labels:
    istio: ingress
  name: istio-ingress
spec:
  ports:
    - name: http
      port: 80
    - name: https
      port: 443
  selector:
    istio: ingress
  type: LoadBalancer
